# streamlit_app.py
# This file creates a production-ready web application with a new UI
# to display an "Astrology Board" instead of an AI image.

import streamlit as st
import datetime
import os
from fortune import get_thai_fortune_details, get_chinese_fortune_details, generate_ai_fortune

# --- Page Configuration ---
st.set_page_config(
    page_title="AI ‡πÇ‡∏´‡∏£‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÑ‡∏ó‡∏¢-‡∏à‡∏µ‡∏ô",
    page_icon="üìú",
    layout="wide"
)

# --- Function to Display the Astrology Board ---
def display_astrology_board(day_name, thai_color, thai_animal, english_animal, birth_time):
    """Creates a visually appealing summary board of the user's astrological data."""
    zodiac_emojis = {
        "Rat": "üê≠", "Ox": "üêÆ", "Tiger": "üêØ", "Rabbit": "üê∞", "Dragon": "üê≤", 
        "Snake": "üêç", "Horse": "üê¥", "Goat": "üêê", "Monkey": "üêµ", 
        "Rooster": "üêî", "Dog": "üê∂", "Pig": "üê∑"
    }
    animal_emoji = zodiac_emojis.get(english_animal, "‚ú®")

    st.markdown(f"""
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Sarabun:wght@400;700&display=swap');
    .board {{
        background-color: #fdf6e3; /* A warm, parchment-like color */
        border: 3px solid #b58900; /* A golden-brown border */
        border-radius: 15px;
        padding: 25px;
        text-align: center;
        font-family: 'Sarabun', sans-serif;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        margin-bottom: 25px;
    }}
    .board h3 {{
        color: #654f00;
        margin-bottom: 20px;
        border-bottom: 2px solid #b58900;
        padding-bottom: 10px;
    }}
    .info-grid {{
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
        align-items: center;
    }}
    .info-item {{
        background-color: #fffbf0;
        padding: 15px;
        border-radius: 10px;
    }}
    .info-item p.label {{
        font-size: 1.1em;
        margin-bottom: 5px;
        color: #837031;
    }}
    .info-item p.value {{
        font-size: 1.6em;
        font-weight: bold;
        color: #584900;
        margin: 0;
    }}
    .emoji {{
        font-size: 6em;
        line-height: 1;
    }}
    .color-circle {{
        width: 50px;
        height: 50px;
        background-color: {thai_color.lower()};
        border-radius: 50%;
        margin: auto;
        border: 3px solid #fff;
        box-shadow: 0 0 10px rgba(0,0,0,0.2);
    }}
    </style>
    <div class="board">
        <h3>‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏ô‡∏ä‡∏±‡∏ô‡∏©‡∏≤‡∏à‡∏£</h3>
        <div class="info-grid">
            <div class="info-item">
                <p class="label">‡∏î‡∏≤‡∏ß‡∏û‡∏£‡∏∞‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î</p>
                <p class="value">‡∏ß‡∏±‡∏ô{day_name}</p>
            </div>
            <div class="info-item">
                <p class="label">‡∏õ‡∏µ‡∏ô‡∏±‡∏Å‡∏©‡∏±‡∏ï‡∏£</p>
                <p class="value">{thai_animal}</p>
            </div>
            <div class="info-item">
                <p class="label">‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏Å‡∏ü‡∏≤‡∏Å</p>
                <p class="value">{birth_time.strftime('%H:%M')} ‡∏ô.</p>
            </div>
             <div class="info-item">
                <p class="label">‡∏™‡∏µ‡∏°‡∏á‡∏Ñ‡∏•</p>
                <div class="color-circle"></div>
            </div>
        </div>
        <p class="emoji">{animal_emoji}</p>
    </div>
    """, unsafe_allow_html=True)


# --- Securely Get API Key ---
api_key = os.environ.get("OPENAI_API_KEY")

# --- Application UI ---
st.title("üìú AI ‡πÇ‡∏´‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå")
st.markdown("‡πÑ‡∏Ç‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏ö‡πÅ‡∏´‡πà‡∏á‡∏î‡∏ß‡∏á‡∏î‡∏≤‡∏ß ‡∏ú‡∏π‡∏Å‡∏î‡∏ß‡∏á‡∏ä‡∏∞‡∏ï‡∏≤‡∏ï‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏Å‡πÇ‡∏´‡∏£‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÑ‡∏ó‡∏¢-‡∏à‡∏µ‡∏ô‡πÇ‡∏ö‡∏£‡∏≤‡∏ì ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡πÅ‡∏´‡πà‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï")

# --- Sidebar for Inputs ---
st.sidebar.header("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡∏Å‡∏î‡∏ß‡∏á")

default_date = datetime.date.today() - datetime.timedelta(days=365*25)
birth_date = st.sidebar.date_input("‡∏ß‡∏±‡∏ô/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô/‡∏õ‡∏µ‡πÄ‡∏Å‡∏¥‡∏î:", default_date, min_value=datetime.date(1920, 1, 1), max_value=datetime.date.today())
birth_time = st.sidebar.time_input("‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Å‡∏¥‡∏î (‡∏ñ‡πâ‡∏≤‡∏ó‡∏£‡∏≤‡∏ö):", datetime.time(12, 00))

if st.sidebar.button("üìú ‡πÄ‡∏õ‡∏¥‡∏î‡∏î‡∏ß‡∏á‡∏ä‡∏∞‡∏ï‡∏≤"):
    if not api_key:
        st.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡πÑ‡∏°‡πà‡∏û‡∏ö OpenAI API key ‡∏ö‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå")
    elif not birth_date:
        st.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î")
    else:
        st.balloons()
        with st.spinner("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ú‡∏π‡∏Å‡∏î‡∏ß‡∏á‡πÅ‡∏•‡∏∞‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå..."):
            day_name, thai_color = get_thai_fortune_details(birth_date)
            thai_animal, english_animal = get_chinese_fortune_details(birth_date.year)
            
            # Display the new Astrology Board UI
            display_astrology_board(day_name, thai_color, thai_animal, english_animal, birth_time)
            
            # Generate and display the text fortune
            text_fortune = generate_ai_fortune(api_key, day_name, thai_color, thai_animal, birth_time)
            
            st.subheader("‡∏Ñ‡∏≥‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏î‡∏ß‡∏á‡∏ä‡∏∞‡∏ï‡∏≤")
            st.markdown("---")
            
            if "Error:" in text_fortune:
                st.error(text_fortune)
            else:
                st.markdown(text_fortune)

