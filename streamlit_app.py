# --- Enhanced Loading Component ---
def show_mystical_loading():
    """Display a beautiful full-screen loading animation with steps."""
    return st.markdown("""
    <div class="mystical-loading-overlay">
        <div class="mystical-loading-content">
            <div class="loading-title">
                üîÆ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏î‡∏ß‡∏á‡∏ä‡∏∞‡∏ï‡∏≤ üîÆ
            </div>
            <div class="loading-subtitle">
                ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏Ñ‡∏≥‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡πÄ‡∏ó‡∏û AI ‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà...<br>
                ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏î‡∏ß‡∏á‡∏î‡∏≤‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
            </div>
            
            <div class="mystical-spinner-container">
                <div class="mystical-spinner"></div>
            </div>
            
            <div class="loading-progress-bar">
                <div class="loading-progress-fill"></div>
            </div>
            
            <div class="loading-steps">
                <div class="loading-step active">‚ú® ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡∏Å‡∏î‡∏ß‡∏á‡∏ä‡∏∞‡∏ï‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</div>
                <div class="loading-step">üîç ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Å‡∏¥‡∏î</div>
                <div class="loading-step">ü§ñ ‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏ó‡∏û AI ‡∏ú‡∏π‡πâ‡∏£‡∏≠‡∏ö‡∏£‡∏π‡πâ</div>
                <div class="loading-step">üìù ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì</div>
            </div>
            
            <div style="margin-top: 20px; font-size: 0.9em; color: rgba(255,255,255,0.7);">
                üí´ ‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ 30-60 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ<br>
                ‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡∏î‡∏ß‡∏á‡∏ä‡∏∞‡∏ï‡∏≤
            </div>
        </div>
    </div>
    """, unsafe_allow_html=True)# streamlit_app.py
# Mobile-optimized Enhanced UI version with responsive design

import streamlit as st
import datetime
import os
from fortune import get_thai_fortune_details, get_chinese_fortune_details, generate_ai_fortune

# --- Page Configuration ---
st.set_page_config(
    page_title="AI ‡πÇ‡∏´‡∏£‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÑ‡∏ó‡∏¢-‡∏à‡∏µ‡∏ô",
    page_icon="üîÆ",
    layout="wide",
    initial_sidebar_state="expanded"
)

# --- Enhanced Mobile-Responsive CSS ---
def load_mobile_responsive_css():
    st.markdown("""
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Sarabun:wght@300;400;600;700&family=Kanit:wght@300;400;600;700&display=swap');
    
    /* Global Reset and Mobile Optimization */
    * {
        box-sizing: border-box;
    }
    
    .main {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 10px;
        min-height: 100vh;
    }
    
    .stApp {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }
    
    /* Hide sidebar toggle on mobile for cleaner look */
    @media (max-width: 768px) {
        .css-1dp5vir {
            background: transparent;
        }
        .main {
            padding: 5px;
        }
    }
    
    /* Enhanced Header - Mobile Responsive */
    .main-header {
        text-align: center;
        background: rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(20px);
        border-radius: 25px;
        padding: 25px 15px;
        margin-bottom: 20px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
    }
    
    .main-header h1 {
        color: #ffffff;
        font-family: 'Kanit', sans-serif;
        font-size: clamp(1.8em, 5vw, 3.5em);
        margin-bottom: 10px;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        line-height: 1.2;
    }
    
    .main-header p {
        color: rgba(255, 255, 255, 0.9);
        font-family: 'Sarabun', sans-serif;
        font-size: clamp(0.9em, 3vw, 1.2em);
        line-height: 1.5;
        margin: 0;
    }
    
    /* Mobile-First Board Design */
    .board {
        background: linear-gradient(145deg, #fdf6e3, #f7e98e);
        border: none;
        border-radius: 20px;
        padding: 20px 15px;
        text-align: center;
        font-family: 'Sarabun', sans-serif;
        box-shadow: 
            0 15px 35px rgba(0,0,0,0.1),
            inset 0 1px 0 rgba(255,255,255,0.6);
        margin: 15px 0;
        position: relative;
        overflow: hidden;
        width: 100%;
    }
    
    .board::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #d4af37, #ffd700, #d4af37);
    }
    
    .board h3 {
        color: #8b4513;
        margin-bottom: 20px;
        font-family: 'Kanit', sans-serif;
        font-size: clamp(1.3em, 4vw, 2.2em);
        font-weight: 600;
        text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
        line-height: 1.2;
    }
    
    /* Mobile-Optimized Grid System */
    .mobile-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 15px;
        width: 100%;
    }
    
    @media (min-width: 768px) {
        .mobile-grid {
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }
    }
    
    @media (min-width: 1024px) {
        .mobile-grid {
            grid-template-columns: repeat(2, 1fr);
            gap: 25px;
        }
    }
    
    /* Info Items - Touch Friendly */
    .info-item {
        background: rgba(255, 255, 255, 0.8);
        padding: 18px 12px;
        border-radius: 15px;
        transition: all 0.3s ease;
        border: 1px solid rgba(212, 175, 55, 0.3);
        min-height: 100px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        cursor: pointer;
    }
    
    .info-item:hover, .info-item:active {
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        background: rgba(255, 255, 255, 0.95);
    }
    
    .info-item .label {
        font-size: clamp(0.8em, 2.5vw, 1em);
        margin-bottom: 8px;
        color: #8b4513;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .info-item .value {
        font-size: clamp(1.1em, 3.5vw, 1.4em);
        font-weight: 700;
        color: #654321;
        margin: 0;
        font-family: 'Kanit', sans-serif;
        line-height: 1.2;
    }
    
    /* Animal Display - Mobile Optimized */
    .animal-display {
        background: linear-gradient(45deg, #ffd700, #ffed4e);
        border-radius: 50%;
        width: clamp(80px, 20vw, 120px);
        height: clamp(80px, 20vw, 120px);
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 20px auto;
        box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        animation: gentle-pulse 3s ease-in-out infinite;
    }
    
    @keyframes gentle-pulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.05); }
    }
    
    .animal-emoji {
        font-size: clamp(2.5em, 8vw, 4em);
        line-height: 1;
    }
    
    /* Color Circle - Touch Friendly */
    .color-circle {
        width: clamp(40px, 12vw, 60px);
        height: clamp(40px, 12vw, 60px);
        border-radius: 50%;
        margin: 10px auto;
        border: 3px solid #fff;
        box-shadow: 
            0 5px 15px rgba(0,0,0,0.3),
            inset 0 2px 5px rgba(255,255,255,0.5);
        transition: transform 0.3s ease;
    }
    
    .color-circle:hover, .color-circle:active {
        transform: scale(1.1);
    }
    
    /* BaZi Pillars - Mobile Stack */
    .bazi-pillars {
        margin: 20px 0;
    }
    
    .pillar-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 10px;
        margin-bottom: 10px;
    }
    
    @media (max-width: 480px) {
        .pillar-row {
            grid-template-columns: 1fr;
            gap: 8px;
        }
    }
    
    .pillar-item {
        background: rgba(139, 69, 19, 0.1);
        border: 2px solid #8b4513;
        border-radius: 12px;
        padding: 12px 8px;
        transition: all 0.3s ease;
        cursor: pointer;
    }
    
    .pillar-item:hover, .pillar-item:active {
        transform: scale(1.02);
        background: rgba(139, 69, 19, 0.2);
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }
    
    .pillar-label {
        font-size: clamp(0.7em, 2vw, 0.8em);
        color: #8b4513;
        margin: 0 0 3px 0;
        font-weight: 600;
    }
    
    .pillar-value {
        font-size: clamp(1.1em, 3vw, 1.4em);
        font-weight: 700;
        color: #654321;
        margin: 0 0 2px 0;
        font-family: 'Kanit', sans-serif;
    }
    
    .pillar-thai {
        font-size: clamp(0.6em, 1.8vw, 0.8em);
        color: #8b4513;
        margin: 0 0 2px 0;
        font-style: italic;
    }
    
    .pillar-detail {
        font-size: clamp(0.6em, 1.6vw, 0.7em);
        color: #a0522d;
        margin: 0;
    }
    
    /* Element Display - Mobile Responsive */
    .element-display {
        margin-top: 20px;
    }
    
    .element-label {
        font-size: clamp(0.9em, 2.5vw, 1.1em);
        color: #8b4513;
        margin-bottom: 10px;
        font-weight: 600;
    }
    
    .element-circle {
        width: clamp(60px, 15vw, 80px);
        height: clamp(60px, 15vw, 80px);
        border-radius: 50%;
        margin: 10px auto;
        border: 3px solid #fff;
        box-shadow: 
            0 8px 20px rgba(0,0,0,0.3),
            inset 0 2px 5px rgba(255,255,255,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        transition: transform 0.3s ease;
    }
    
    .element-circle:hover, .element-circle:active {
        transform: scale(1.05) rotate(5deg);
    }
    
    .element-emoji {
        font-size: clamp(1.8em, 6vw, 2.5em);
    }
    
    .element-name {
        font-size: clamp(1em, 3vw, 1.3em);
        font-weight: 700;
        color: #654321;
        margin: 8px 0 5px 0;
        font-family: 'Kanit', sans-serif;
    }
    
    .element-characteristic {
        font-size: clamp(0.8em, 2.2vw, 0.9em);
        color: #8b4513;
        margin: 5px 0;
        line-height: 1.4;
        font-style: italic;
    }
    
    /* Fortune Container - Mobile Optimized */
    .fortune-container {
        background: rgba(255, 255, 255, 0.95);
        border-radius: 20px;
        padding: 20px 15px;
        margin: 20px 0;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        border-left: 5px solid #d4af37;
    }
    
    .fortune-container h3 {
        color: #8b4513;
        font-family: 'Kanit', sans-serif;
        font-size: clamp(1.2em, 4vw, 1.8em);
        margin-bottom: 15px;
        text-align: center;
        line-height: 1.2;
    }
    
    /* Sidebar Styling - Mobile Friendly */
    .css-1d391kg {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
    }
    
    /* Button Styling - Touch Optimized */
    .stButton > button {
        background: linear-gradient(45deg, #d4af37, #ffd700);
        color: #8b4513;
        border: none;
        border-radius: 25px;
        padding: 18px 30px;
        font-weight: 600;
        font-size: clamp(1em, 3vw, 1.1em);
        transition: all 0.3s ease;
        box-shadow: 0 8px 20px rgba(0,0,0,0.2);
        width: 100%;
        min-height: 50px;
    }
    
    .stButton > button:hover, .stButton > button:active {
        transform: translateY(-2px);
        box-shadow: 0 10px 30px rgba(0,0,0,0.3);
        background: linear-gradient(45deg, #ffd700, #d4af37);
    }
    
    /* Date and Time Input Styling */
    .stDateInput > div, .stTimeInput > div {
        border-radius: 10px;
    }
    
    /* Content Cards - Mobile Responsive */
    .content-card {
        background: rgba(255,255,255,0.9);
        padding: 20px 15px;
        border-radius: 15px;
        line-height: 1.7;
        font-family: 'Sarabun', sans-serif;
        font-size: clamp(0.9em, 2.5vw, 1.1em);
        box-shadow: 0 5px 20px rgba(0,0,0,0.1);
        margin-bottom: 15px;
    }
    
    /* Grid for Analysis Cards */
    .analysis-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 12px;
        margin-top: 15px;
    }
    
    @media (min-width: 600px) {
        .analysis-grid {
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }
    }
    
    .analysis-card {
        background: rgba(139,69,19,0.1);
        padding: 15px 12px;
        border-radius: 12px;
        border: 1px solid rgba(212,175,55,0.3);
        transition: all 0.3s ease;
    }
    
    .analysis-card:hover, .analysis-card:active {
        background: rgba(139,69,19,0.2);
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }
    
    /* Welcome Message - Mobile Centered */
    .welcome-message {
        text-align: center;
        padding: 40px 20px;
        color: rgba(255,255,255,0.9);
    }
    
    .welcome-message h2 {
        font-family: 'Kanit', sans-serif;
        font-size: clamp(1.5em, 5vw, 2.5em);
        margin-bottom: 15px;
        line-height: 1.3;
    }
    
    .welcome-message p {
        font-size: clamp(1em, 3vw, 1.2em);
        font-family: 'Sarabun', sans-serif;
        line-height: 1.6;
        max-width: 600px;
        margin: 0 auto;
    }
    
    /* Enhanced Loading Screen */
    .mystical-loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.95), rgba(118, 75, 162, 0.95));
        backdrop-filter: blur(10px);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        z-index: 9999;
        animation: fadeIn 0.5s ease-in;
    }
    
    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }
    
    .mystical-loading-content {
        text-align: center;
        color: white;
        padding: 40px 20px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 25px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
        backdrop-filter: blur(15px);
        max-width: 90%;
        width: 400px;
    }
    
    .loading-title {
        font-family: 'Kanit', sans-serif;
        font-size: clamp(1.5em, 5vw, 2.5em);
        font-weight: 700;
        margin-bottom: 15px;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
        background: linear-gradient(45deg, #ffd700, #ffed4e, #d4af37);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        animation: titleGlow 2s ease-in-out infinite alternate;
    }
    
    @keyframes titleGlow {
        from { 
            filter: drop-shadow(0 0 10px rgba(255, 215, 0, 0.5));
            transform: scale(1);
        }
        to { 
            filter: drop-shadow(0 0 20px rgba(255, 215, 0, 0.8));
            transform: scale(1.02);
        }
    }
    
    .loading-subtitle {
        font-family: 'Sarabun', sans-serif;
        font-size: clamp(1em, 3vw, 1.3em);
        margin-bottom: 30px;
        color: rgba(255, 255, 255, 0.9);
        line-height: 1.5;
        font-weight: 500;
    }
    
    .mystical-spinner-container {
        display: flex;
        justify-content: center;
        align-items: center;
        margin: 30px 0;
        position: relative;
    }
    
    .mystical-spinner {
        width: clamp(80px, 20vw, 120px);
        height: clamp(80px, 20vw, 120px);
        border: 4px solid rgba(255, 215, 0, 0.2);
        border-top: 4px solid #ffd700;
        border-radius: 50%;
        animation: mysticalSpin 1.5s linear infinite;
        position: relative;
    }
    
    .mystical-spinner::before {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 60%;
        height: 60%;
        border: 3px solid rgba(255, 255, 255, 0.3);
        border-top: 3px solid #ffffff;
        border-radius: 50%;
        transform: translate(-50%, -50%);
        animation: mysticalSpin 1s linear infinite reverse;
    }
    
    .mystical-spinner::after {
        content: 'üîÆ';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: clamp(1.5em, 5vw, 2.5em);
        animation: float 2s ease-in-out infinite;
    }
    
    @keyframes mysticalSpin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
    
    @keyframes float {
        0%, 100% { transform: translate(-50%, -50%) translateY(0px); }
        50% { transform: translate(-50%, -50%) translateY(-10px); }
    }
    
    .loading-steps {
        font-family: 'Sarabun', sans-serif;
        font-size: clamp(0.9em, 2.5vw, 1.1em);
        color: rgba(255, 255, 255, 0.8);
        margin-top: 20px;
        line-height: 1.6;
    }
    
    .loading-step {
        margin: 8px 0;
        padding: 5px 0;
        opacity: 0.6;
        transition: all 0.5s ease;
    }
    
    .loading-step.active {
        opacity: 1;
        color: #ffd700;
        font-weight: 600;
        transform: scale(1.05);
    }
    
    .loading-step::before {
        content: '‚ú® ';
        margin-right: 5px;
    }
    
    .loading-progress-bar {
        width: 100%;
        height: 6px;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 10px;
        margin: 20px 0 10px 0;
        overflow: hidden;
    }
    
    .loading-progress-fill {
        height: 100%;
        background: linear-gradient(90deg, #ffd700, #ffed4e, #d4af37);
        border-radius: 10px;
        animation: progressFlow 3s ease-in-out infinite;
        width: 0%;
    }
    
    @keyframes progressFlow {
        0% { width: 0%; }
        50% { width: 70%; }
        100% { width: 100%; }
    }
    
    /* Hide default streamlit spinner */
    .stSpinner {
        display: none !important;
    }
    
    /* Scrollbar Styling */
    ::-webkit-scrollbar {
        width: 8px;
    }
    
    ::-webkit-scrollbar-track {
        background: rgba(255,255,255,0.1);
        border-radius: 10px;
    }
    
    ::-webkit-scrollbar-thumb {
        background: rgba(212,175,55,0.5);
        border-radius: 10px;
    }
    
    ::-webkit-scrollbar-thumb:hover {
        background: rgba(212,175,55,0.7);
    }
    
    /* Accessibility - Focus States */
    .info-item:focus, .pillar-item:focus, .analysis-card:focus {
        outline: 2px solid #d4af37;
        outline-offset: 2px;
    }
    
    /* Print Styles */
    @media print {
        .main {
            background: white !important;
        }
        .board {
            background: white !important;
            border: 1px solid #ccc !important;
        }
    }
    </style>
    """, unsafe_allow_html=True)

# --- Chinese BaZi Functions ---
def get_bazi_elements(birth_date, birth_time):
    """Get BaZi (Eight Characters) elements for the given birth date and time."""
    # Heavenly Stems (Â§©Âπ≤) with Thai translations
    heavenly_stems = [
        {"chinese": "Áî≤", "thai": "‡∏Å‡∏¥‡πä‡∏ö", "element": "Êú®ÈôΩ", "meaning": "‡πÑ‡∏°‡πâ‡∏ä‡∏≤‡∏¢"},
        {"chinese": "‰πô", "thai": "‡∏¢‡∏µ‡πã", "element": "Êú®Èô∞", "meaning": "‡πÑ‡∏°‡πâ‡∏´‡∏ç‡∏¥‡∏á"},
        {"chinese": "‰∏ô", "thai": "‡∏ö‡∏¥‡πã‡∏á", "element": "ÁÅ´ÈôΩ", "meaning": "‡πÑ‡∏ü‡∏ä‡∏≤‡∏¢"},
        {"chinese": "‰∏Å", "thai": "‡∏ï‡∏¥‡πã‡∏á", "element": "ÁÅ´Èô∞", "meaning": "‡πÑ‡∏ü‡∏´‡∏ç‡∏¥‡∏á"},
        {"chinese": "Êàä", "thai": "‡∏´‡∏ß‡∏π‡πà", "element": "ÂúüÈôΩ", "meaning": "‡∏î‡∏¥‡∏ô‡∏ä‡∏≤‡∏¢"},
        {"chinese": "Â∑±", "thai": "‡∏à‡∏µ‡πã", "element": "ÂúüÈô∞", "meaning": "‡∏î‡∏¥‡∏ô‡∏´‡∏ç‡∏¥‡∏á"},
        {"chinese": "Â∫ö", "thai": "‡πÄ‡∏Å‡∏¥‡πà‡∏á", "element": "ÈáëÈôΩ", "meaning": "‡πÇ‡∏•‡∏´‡∏∞‡∏ä‡∏≤‡∏¢"},
        {"chinese": "Ëæõ", "thai": "‡∏ã‡∏¥‡∏ô", "element": "ÈáëÈô∞", "meaning": "‡πÇ‡∏•‡∏´‡∏∞‡∏´‡∏ç‡∏¥‡∏á"},
        {"chinese": "Â£¨", "thai": "‡πÄ‡∏´‡∏£‡∏¥‡∏ô", "element": "Ê∞¥ÈôΩ", "meaning": "‡∏ô‡πâ‡∏≥‡∏ä‡∏≤‡∏¢"},
        {"chinese": "Áô∏", "thai": "‡∏Å‡∏∏‡∏¢", "element": "Ê∞¥Èô∞", "meaning": "‡∏ô‡πâ‡∏≥‡∏´‡∏ç‡∏¥‡∏á"}
    ]
    
    # Earthly Branches (Âú∞ÊîØ) with Thai translations
    earthly_branches = [
        {"chinese": "Â≠ê", "thai": "‡∏à‡∏∑‡πà‡∏≠", "animal": "Èº†", "thai_animal": "‡∏´‡∏ô‡∏π", "time": "23-01‡∏ô."},
        {"chinese": "‰∏ë", "thai": "‡πÇ‡∏â‡∏ß", "animal": "Áâõ", "thai_animal": "‡∏ß‡∏±‡∏ß", "time": "01-03‡∏ô."},
        {"chinese": "ÂØÖ", "thai": "‡∏≠‡∏¥‡∏ô", "animal": "Ëôé", "thai_animal": "‡πÄ‡∏™‡∏∑‡∏≠", "time": "03-05‡∏ô."},
        {"chinese": "ÂçØ", "thai": "‡πÄ‡∏´‡∏°‡∏≤", "animal": "ÂÖî", "thai_animal": "‡∏Å‡∏£‡∏∞‡∏ï‡πà‡∏≤‡∏¢", "time": "05-07‡∏ô."},
        {"chinese": "Ëæ∞", "thai": "‡πÄ‡∏â‡∏¥‡∏ô", "animal": "Èæç", "thai_animal": "‡∏°‡∏±‡∏á‡∏Å‡∏£", "time": "07-09‡∏ô."},
        {"chinese": "Â∑≥", "thai": "‡∏ã‡∏∑‡πà‡∏≠", "animal": "Ëõá", "thai_animal": "‡∏á‡∏π", "time": "09-11‡∏ô."},
        {"chinese": "Âçà", "thai": "‡∏ß‡∏π‡πà", "animal": "È¶¨", "thai_animal": "‡∏°‡πâ‡∏≤", "time": "11-13‡∏ô."},
        {"chinese": "Êú™", "thai": "‡πÄ‡∏´‡∏ß‡∏¢", "animal": "Áæä", "thai_animal": "‡πÅ‡∏û‡∏∞", "time": "13-15‡∏ô."},
        {"chinese": "Áî≥", "thai": "‡πÄ‡∏™‡∏¥‡∏ô", "animal": "Áå¥", "thai_animal": "‡∏•‡∏¥‡∏á", "time": "15-17‡∏ô."},
        {"chinese": "ÈÖâ", "thai": "‡πÇ‡∏¢‡πà‡∏ß", "animal": "Èõû", "thai_animal": "‡πÑ‡∏Å‡πà", "time": "17-19‡∏ô."},
        {"chinese": "Êàå", "thai": "‡∏ã‡∏π‡πà", "animal": "Áãó", "thai_animal": "‡∏´‡∏°‡∏≤", "time": "19-21‡∏ô."},
        {"chinese": "‰∫•", "thai": "‡πÑ‡∏´", "animal": "Ë±¨", "thai_animal": "‡∏´‡∏°‡∏π", "time": "21-23‡∏ô."}
    ]
    
    # Five Elements (‰∫îË°å) with detailed Thai explanations
    elements = {
        "Êú®": {
            "chinese": "Êú®", "thai": "‡πÑ‡∏°‡πâ", "emoji": "üå≥", "color": "#22c55e",
            "characteristics": "‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå",
            "personality": "‡∏£‡∏±‡∏Å‡∏≠‡∏¥‡∏™‡∏£‡∏∞, ‡∏°‡∏µ‡∏à‡∏¥‡∏ï‡πÉ‡∏à‡∏î‡∏µ, ‡∏ä‡∏≠‡∏ö‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥"
        },
        "ÁÅ´": {
            "chinese": "ÁÅ´", "thai": "‡πÑ‡∏ü", "emoji": "üî•", "color": "#ef4444",
            "characteristics": "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡πâ‡∏≠‡∏ô‡πÅ‡∏£‡∏á, ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏™‡∏π‡∏á, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏£‡∏∞‡∏ï‡∏∑‡∏≠‡∏£‡∏∑‡∏≠‡∏£‡πâ‡∏ô",
            "personality": "‡∏£‡πà‡∏≤‡πÄ‡∏£‡∏¥‡∏á, ‡∏Å‡∏£‡∏∞‡∏â‡∏±‡∏ö‡∏Å‡∏£‡∏∞‡πÄ‡∏â‡∏á, ‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ô‡∏≥"
        },
        "Âúü": {
            "chinese": "Âúü", "thai": "‡∏î‡∏¥‡∏ô", "emoji": "üèîÔ∏è", "color": "#a3a3a3",
            "characteristics": "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏î‡∏ó‡∏ô, ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ß‡πâ‡∏ß‡∏≤‡∏á‡πÉ‡∏à‡πÑ‡∏î‡πâ",
            "personality": "‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á, ‡∏ô‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠, ‡∏£‡∏±‡∏Å‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß"
        },
        "Èáë": {
            "chinese": "Èáë", "thai": "‡πÇ‡∏•‡∏´‡∏∞", "emoji": "‚ö°", "color": "#fbbf24",
            "characteristics": "‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏°‡∏Ñ‡∏≤‡∏¢, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∏‡∏ï‡∏¥‡∏ò‡∏£‡∏£‡∏°",
            "personality": "‡πÄ‡∏î‡πá‡∏î‡∏Ç‡∏≤‡∏î, ‡∏°‡∏µ‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£, ‡∏£‡∏±‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∏‡∏ï‡∏¥‡∏ò‡∏£‡∏£‡∏°"
        },
        "Ê∞¥": {
            "chinese": "Ê∞¥", "thai": "‡∏ô‡πâ‡∏≥", "emoji": "üíß", "color": "#3b82f6",
            "characteristics": "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∂‡∏Å‡∏ã‡∏∂‡πâ‡∏á, ‡∏õ‡∏±‡∏ç‡∏ç‡∏≤",
            "personality": "‡∏â‡∏•‡∏≤‡∏î, ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÑ‡∏î‡πâ‡∏î‡∏µ, ‡∏°‡∏µ‡∏™‡∏±‡∏ç‡∏ä‡∏≤‡∏ï‡∏ç‡∏≤‡∏ì"
        }
    }
    
    # Simplified calculation
    year = birth_date.year
    month = birth_date.month
    day = birth_date.day
    hour = birth_time.hour
    
    # Calculate pillars
    year_stem_idx = (year - 4) % 10
    year_branch_idx = (year - 4) % 12
    month_stem_idx = (month - 1) % 10
    month_branch_idx = (month - 1) % 12
    day_stem_idx = (day - 1) % 10
    day_branch_idx = (day - 1) % 12
    hour_stem_idx = (hour // 2) % 10
    hour_branch_idx = (hour // 2) % 12
    
    # Dominant element
    dominant_element_key = list(elements.keys())[year % 5]
    dominant_element = elements[dominant_element_key]
    
    return {
        "year_stem": heavenly_stems[year_stem_idx],
        "year_branch": earthly_branches[year_branch_idx],
        "month_stem": heavenly_stems[month_stem_idx],
        "month_branch": earthly_branches[month_branch_idx],
        "day_stem": heavenly_stems[day_stem_idx],
        "day_branch": earthly_branches[day_branch_idx],
        "hour_stem": heavenly_stems[hour_stem_idx],
        "hour_branch": earthly_branches[hour_branch_idx],
        "dominant_element": dominant_element
    }

# --- Enhanced Mobile-Responsive Astrology Board ---
def display_mobile_optimized_boards(day_name, thai_color, thai_animal, english_animal, birth_time, birth_date):
    """Creates mobile-optimized astrology boards."""
    zodiac_emojis = {
        "Rat": "üê≠", "Ox": "üêÆ", "Tiger": "üêØ", "Rabbit": "üê∞", "Dragon": "üê≤", 
        "Snake": "üêç", "Horse": "üê¥", "Goat": "üêê", "Monkey": "üêµ", 
        "Rooster": "üêî", "Dog": "üê∂", "Pig": "üê∑"
    }
    animal_emoji = zodiac_emojis.get(english_animal, "‚ú®")
    
    # Color mapping
    color_map = {
        '‡πÅ‡∏î‡∏á': '#dc2626', '‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß': '#16a34a', '‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô': '#2563eb',
        '‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á': '#eab308', '‡∏°‡πà‡∏ß‡∏á': '#9333ea', '‡∏ä‡∏°‡∏û‡∏π': '#ec4899',
        '‡∏™‡πâ‡∏°': '#ea580c', '‡∏Ç‡∏≤‡∏ß': '#f8fafc', '‡∏î‡∏≥': '#1f2937'
    }
    display_color = color_map.get(thai_color, thai_color.lower())
    
    # Get BaZi elements
    bazi = get_bazi_elements(birth_date, birth_time)
    
    # Thai Board
    st.markdown(f"""
    <div class="board">
        <h3>üîÆ ‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏ô‡∏ä‡∏±‡∏ô‡∏©‡∏≤‡∏à‡∏£</h3>
        <div class="mobile-grid">
            <div class="info-item">
                <p class="label">üåü ‡∏î‡∏≤‡∏ß‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô</p>
                <p class="value">‡∏ß‡∏±‡∏ô{day_name}</p>
            </div>
            <div class="info-item">
                <p class="label">üêâ ‡∏õ‡∏µ‡∏ô‡∏±‡∏Å‡∏©‡∏±‡∏ï‡∏£</p>
                <p class="value">{thai_animal}</p>
            </div>
            <div class="info-item">
                <p class="label">‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Å‡∏¥‡∏î</p>
                <p class="value">{birth_time.strftime('%H:%M')} ‡∏ô.</p>
            </div>
            <div class="info-item">
                <p class="label">üé® ‡∏™‡∏µ‡∏°‡∏á‡∏Ñ‡∏•</p>
                <div class="color-circle" style="background-color: {display_color};"></div>
                <p class="value">{thai_color}</p>
            </div>
        </div>
        <div class="animal-display">
            <span class="animal-emoji">{animal_emoji}</span>
        </div>
    </div>
    """, unsafe_allow_html=True)
    
    # Chinese BaZi Board
    st.markdown(f"""
    <div class="board">
        <h3>üèÆ ÂÖ´Â≠óÂëΩÁõ§ (BƒÅ Z√¨)</h3>
        <p style="font-size: 0.9em; color: #8b4513; margin-bottom: 15px;">
            ‡πÇ‡∏´‡∏£‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏à‡∏µ‡∏ô‡πÇ‡∏ö‡∏£‡∏≤‡∏ì
        </p>
        <div class="bazi-pillars">
            <div class="pillar-row">
                <div class="pillar-item">
                    <p class="pillar-label">Âπ¥Êü± (‡∏õ‡∏µ)</p>
                    <p class="pillar-value">{bazi['year_stem']['chinese']}{bazi['year_branch']['chinese']}</p>
                    <p class="pillar-thai">({bazi['year_stem']['thai']}{bazi['year_branch']['thai']})</p>
                    <p class="pillar-detail">{bazi['year_branch']['thai_animal']}</p>
                </div>
                <div class="pillar-item">
                    <p class="pillar-label">ÊúàÊü± (‡πÄ‡∏î‡∏∑‡∏≠‡∏ô)</p>
                    <p class="pillar-value">{bazi['month_stem']['chinese']}{bazi['month_branch']['chinese']}</p>
                    <p class="pillar-thai">({bazi['month_stem']['thai']}{bazi['month_branch']['thai']})</p>
                    <p class="pillar-detail">{bazi['month_branch']['thai_animal']}</p>
                </div>
            </div>
            <div class="pillar-row">
                <div class="pillar-item">
                    <p class="pillar-label">Êó•Êü± (‡∏ß‡∏±‡∏ô)</p>
                    <p class="pillar-value">{bazi['day_stem']['chinese']}{bazi['day_branch']['chinese']}</p>
                    <p class="pillar-thai">({bazi['day_stem']['thai']}{bazi['day_branch']['thai']})</p>
                    <p class="pillar-detail">{bazi['day_branch']['thai_animal']}</p>
                </div>
                <div class="pillar-item">
                    <p class="pillar-label">ÊôÇÊü± (‡πÄ‡∏ß‡∏•‡∏≤)</p>
                    <p class="pillar-value">{bazi['hour_stem']['chinese']}{bazi['hour_branch']['chinese']}</p>
                    <p class="pillar-thai">({bazi['hour_stem']['thai']}{bazi['hour_branch']['thai']})</p>
                    <p class="pillar-detail">{bazi['hour_branch']['time']}</p>
                </div>
            </div>
        </div>
        <div class="element-display">
            <p class="element-label">‰∏ªÂ∞é‰∫îË°å (‡∏ò‡∏≤‡∏ï‡∏∏‡∏´‡∏•‡∏±‡∏Å)</p>
            <div class="element-circle" style="background-color: {bazi['dominant_element']['color']};">
                <span class="element-emoji">{bazi['dominant_element']['emoji']}</span>
            </div>
            <p class="element-name">{bazi['dominant_element']['chinese']} ({bazi['dominant_element']['thai']})</p>
            <p class="element-characteristic">{bazi['dominant_element']['characteristics']}</p>
        </div>
    </div>
    """, unsafe_allow_html=True)

# --- Main Application ---
def main():
    # Load mobile-responsive CSS
    load_mobile_responsive_css()
    
    # Enhanced Header
    st.markdown("""
    <div class="main-header">
        <h1>üîÆ AI ‡πÇ‡∏´‡∏£‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå üîÆ</h1>
        <p>‚ú® ‡πÑ‡∏Ç‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏ö‡πÅ‡∏´‡πà‡∏á‡∏î‡∏ß‡∏á‡∏î‡∏≤‡∏ß<br>‡∏ú‡∏π‡∏Å‡∏î‡∏ß‡∏á‡∏ä‡∏∞‡∏ï‡∏≤‡πÑ‡∏ó‡∏¢-‡∏à‡∏µ‡∏ô‡πÇ‡∏ö‡∏£‡∏≤‡∏ì ‚ú®</p>
    </div>
    """, unsafe_allow_html=True)

    # Mobile-optimized Sidebar
    with st.sidebar:
        st.markdown("### üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡∏Å‡∏î‡∏ß‡∏á")
        st.markdown("---")
        
        default_date = datetime.date.today() - datetime.timedelta(days=365*25)
        birth_date = st.date_input(
            "üìÖ ‡∏ß‡∏±‡∏ô/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô/‡∏õ‡∏µ‡πÄ‡∏Å‡∏¥‡∏î:", 
            default_date, 
            min_value=datetime.date(1920, 1, 1), 
            max_value=datetime.date.today()
        )
        
        birth_time = st.time_input(
            "üïê ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Å‡∏¥‡∏î (‡∏ñ‡πâ‡∏≤‡∏ó‡∏£‡∏≤‡∏ö):", 
            datetime.time(12, 00)
        )
        
        st.markdown("---")
        fortune_button = st.button("üîÆ ‡πÄ‡∏õ‡∏¥‡∏î‡∏î‡∏ß‡∏á‡∏ä‡∏∞‡∏ï‡∏≤", use_container_width=True)

    # Get API key
    api_key = os.environ.get("OPENAI_API_KEY")

    # Main content area
    if fortune_button:
        if not api_key:
            st.error("‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡πÑ‡∏°‡πà‡∏û‡∏ö OpenAI API key ‡∏ö‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå")
        elif not birth_date:
            st.error("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î")
        else:
            # Success effects
            st.balloons()
            
            # Show enhanced loading screen
            loading_placeholder = st.empty()
            with loading_placeholder.container():
                show_mystical_loading()
            
            # Actual processing with progress simulation
            import time
            time.sleep(1)  # Show loading screen briefly
            
            try:
                # Get fortune details
                day_name, thai_color = get_thai_fortune_details(birth_date)
                thai_animal, english_animal = get_chinese_fortune_details(birth_date.year)
                
                # Clear loading screen and show results
                loading_placeholder.empty()
                
                # Display mobile-optimized boards
                display_mobile_optimized_boards(day_name, thai_color, thai_animal, english_animal, birth_time, birth_date)
                
                # Generate AI fortune with another loading indicator
                with st.spinner("ü§ñ ‡πÄ‡∏ó‡∏û AI ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì..."):
                    text_fortune = generate_ai_fortune(api_key, day_name, thai_color, thai_animal, birth_time)
                
                # Display fortune in mobile-friendly container
                st.markdown("""
                <div class="fortune-container">
                    <h3>üìú ‡∏Ñ‡∏≥‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏î‡∏ß‡∏á‡∏ä‡∏∞‡∏ï‡∏≤</h3>
                </div>
                """, unsafe_allow_html=True)
                
                if "Error:" in text_fortune:
                    st.error(f"‚ùå {text_fortune}")
                else:
                    # Main fortune text
                    st.markdown(f"""
                    <div class="content-card">
                        {text_fortune}
                    </div>
                    """, unsafe_allow_html=True)
                    
                    # BaZi Analysis Section
                    bazi_info = get_bazi_elements(birth_date, birth_time)
                    
                    st.markdown("""
                    <div class="fortune-container">
                        <h3>üèÆ ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ö‡∏∏‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ï‡∏≤‡∏°ÂÖ´Â≠ó</h3>
                    </div>
                    """, unsafe_allow_html=True)
                    
                    # Element analysis
                    st.markdown(f"""
                    <div class="content-card">
                        <h4 style="color: #8b4513; margin-bottom: 15px; text-align: center;">
                            üåü ‡∏ò‡∏≤‡∏ï‡∏∏‡∏´‡∏•‡∏±‡∏Å: {bazi_info['dominant_element']['chinese']} ({bazi_info['dominant_element']['thai']}) {bazi_info['dominant_element']['emoji']}
                        </h4>
                        
                        <p><strong>üé≠ ‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡πÄ‡∏î‡πà‡∏ô:</strong> {bazi_info['dominant_element']['characteristics']}</p>
                        <p><strong>üí´ ‡∏ö‡∏∏‡∏Ñ‡∏•‡∏¥‡∏Å‡∏†‡∏≤‡∏û:</strong> {bazi_info['dominant_element']['personality']}</p>
                    </div>
                    """, unsafe_allow_html=True)
                    
                    # Pillars explanation
                    st.markdown("<h5 style='color: white; text-align: center; margin: 20px 0;'>üìù ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏≤‡∏ó‡∏±‡πâ‡∏á 4</h5>", unsafe_allow_html=True)
                    
                    # Mobile-friendly grid for pillar meanings
                    st.markdown(f"""
                    <div class="analysis-grid">
                        <div class="analysis-card">
                            <strong>Âπ¥Êü± (‡∏õ‡∏µ):</strong> {bazi_info['year_stem']['chinese']}{bazi_info['year_branch']['chinese']} 
                            ({bazi_info['year_stem']['thai']}{bazi_info['year_branch']['thai']})<br>
                            <small style="color: #8b4513;">‡∏ö‡∏£‡∏£‡∏û‡∏ö‡∏∏‡∏£‡∏∏‡∏©, ‡∏£‡∏≤‡∏Å‡πÄ‡∏´‡∏á‡πâ‡∏≤, ‡∏ß‡∏±‡∏¢‡πÄ‡∏î‡πá‡∏Å</small>
                        </div>
                        <div class="analysis-card">
                            <strong>ÊúàÊü± (‡πÄ‡∏î‡∏∑‡∏≠‡∏ô):</strong> {bazi_info['month_stem']['chinese']}{bazi_info['month_branch']['chinese']} 
                            ({bazi_info['month_stem']['thai']}{bazi_info['month_branch']['thai']})<br>
                            <small style="color: #8b4513;">‡∏û‡πà‡∏≠‡πÅ‡∏°‡πà, ‡∏ß‡∏±‡∏¢‡∏£‡∏∏‡πà‡∏ô, ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤</small>
                        </div>
                        <div class="analysis-card">
                            <strong>Êó•Êü± (‡∏ß‡∏±‡∏ô):</strong> {bazi_info['day_stem']['chinese']}{bazi_info['day_branch']['chinese']} 
                            ({bazi_info['day_stem']['thai']}{bazi_info['day_branch']['thai']})<br>
                            <small style="color: #8b4513;">‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á, ‡∏Ñ‡∏π‡πà‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï, ‡∏ß‡∏±‡∏¢‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà</small>
                        </div>
                        <div class="analysis-card">
                            <strong>ÊôÇÊü± (‡πÄ‡∏ß‡∏•‡∏≤):</strong> {bazi_info['hour_stem']['chinese']}{bazi_info['hour_branch']['chinese']} 
                            ({bazi_info['hour_stem']['thai']}{bazi_info['hour_branch']['thai']})<br>
                            <small style="color: #8b4513;">‡∏•‡∏π‡∏Å‡∏´‡∏•‡∏≤‡∏ô, ‡∏ß‡∏±‡∏¢‡∏ä‡∏£‡∏≤, ‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï</small>
                        </div>
                    </div>
                    """, unsafe_allow_html=True)
                    
            except Exception as e:
                loading_placeholder.empty()  # Clear loading on error
                st.error(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}")
    
    else:
        # Mobile-optimized welcome message
        st.markdown("""
        <div class="welcome-message">
            <h2>üåü ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡πÇ‡∏•‡∏Å‡πÅ‡∏´‡πà‡∏á‡πÇ‡∏´‡∏£‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</h2>
            <p>
                ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏á<br>
                ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏•‡∏¥‡∏Å "‡πÄ‡∏õ‡∏¥‡∏î‡∏î‡∏ß‡∏á‡∏ä‡∏∞‡∏ï‡∏≤" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á<br>
                ‡∏™‡∏π‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏ö‡πÅ‡∏´‡πà‡∏á‡∏î‡∏ß‡∏á‡∏î‡∏≤‡∏ß ‚ú®
            </p>
        </div>
        """, unsafe_allow_html=True)

if __name__ == "__main__":
    main()
